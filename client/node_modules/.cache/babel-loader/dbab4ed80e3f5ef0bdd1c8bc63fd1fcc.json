{"ast":null,"code":"import _classCallCheck from \"/home/praveen/Downloads/invoice/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/praveen/Downloads/invoice/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/praveen/Downloads/invoice/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/praveen/Downloads/invoice/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/praveen/Downloads/invoice/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/praveen/Downloads/invoice/src/components/dashboard/email/index.js\";\nimport React from 'react';\nimport { Modal, Button, Form, Icon, Input, Upload } from 'antd';\nvar FormItem = Form.Item;\nvar TextArea = Input.TextArea;\n\nvar Email =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Email, _React$Component);\n\n  function Email() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Email);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Email)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function () {\n      _this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    _this.handleCancel = function () {\n      console.log('Clicked cancel button');\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Email, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading,\n          ModalText = _this$state.ModalText;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          return window.print();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Print\")), React.createElement(Modal, {\n        title: \"Email\",\n        visible: visible,\n        onOk: this.handleOk,\n        confirmLoading: confirmLoading,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"To\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        placeholder: \"eaxmple@gmail.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        label: \"Subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        placeholder: \"subject\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        autosize: {\n          minRows: 6,\n          maxRows: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Upload, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"paper-clip\",\n        theme: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Email;\n}(React.Component);\n\nexport default Email;","map":{"version":3,"sources":["/home/praveen/Downloads/invoice/src/components/dashboard/email/index.js"],"names":["React","Modal","Button","Form","Icon","Input","Upload","FormItem","Item","TextArea","Email","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","setTimeout","handleCancel","console","log","window","print","color","minRows","maxRows","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Button, Form, Icon, Input, Upload } from 'antd';\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nclass Email extends React.Component {\n  state = {\n    ModalText: 'Content of the modal',\n    visible: false,\n    confirmLoading: false,\n  }\n\n    \n    \n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  }\n\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  }\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  }\n\n  render() {\n    const { visible, confirmLoading, ModalText } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n            Email       \n     </Button>\n     <div>\n       \n     <Button type=\"primary\" onClick={() => window.print()}>\n        Print\n     </Button>\n     </div>\n        <Modal title=\"Email\"\n          visible={visible}\n          onOk={this.handleOk}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          {/* <p>{ModalText}</p> */}\n          <Form>\n          <FormItem label='To'>\n       \n            <Input  style={{ color: 'rgba(0,0,0,.25)' }} placeholder=\"eaxmple@gmail.com\" />\n          \n        </FormItem>\n        <FormItem label='Subject'>\n               <Input  style={{ color: 'rgba(0,0,0,.25)' }} placeholder=\"subject\" />\n        </FormItem>\n        {/* <textarea   style={{width:\"100%\"}}>\n        </textarea> */}\n        <FormItem>\n        <TextArea  autosize={{ minRows: 6, maxRows: 10 }} />\n        </FormItem>\n        <FormItem>\n        <Upload >\n    <Button>\n    <Icon type=\"paper-clip\" theme=\"outlined\" /> \n    </Button>\n  </Upload>\n        </FormItem>\n          </Form>\n          \n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Email;"]},"metadata":{},"sourceType":"module"}